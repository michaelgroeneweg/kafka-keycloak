version: '3.5'

services:

  zookeeper:
    image: quay.io/strimzi/latest-kafka-3.7.0 
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - 2181:2181
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/latest-kafka-3.7.0 
    command: [
      "/tmp/wait-for-keycloak.sh"
    ]
    volumes:
      - ./wait-for-keycloak.sh:/tmp/wait-for-keycloak.sh
      - ./kafka_server_jaas.conf:/opt/kafka/config/kafka_server_jaas.conf 
      - ./producer.properties:/opt/kafka/config/producer.properties
      - ./consumer.properties:/opt/kafka/config/consumer.properties
      - ./server.properties:/opt/kafka/config/server.properties
      - ./custom-oauthbearer/target/kafka-oauth-1.0.0.jar:/opt/kafka/libs/kafka-oauth-1.0.0.jar
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/kafka_server_jaas.conf"
      #     KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://localhost:9092
      #      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
      #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #      INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      #      SASL_MECHANISMS: OAUTHBEARER
      #      LOGIN_CALLBACK_HANDLER: com.mcmedisoft.security.oauthbearer.OauthAuthenticateLoginCallbackHandler
      #      SERVER_CALLBACK_HANDLER: com.mcmedisoft.security.oauthbearer.OauthAuthenticateValidatorCallbackHandler
      #      SASL_LOGIN_CALLBACK_HANDLER: com.mcmedisoft.security.oauthbearer.OauthAuthenticateLoginCallbackHandler
      #      SASL_SERVER_CALLBACK_HANDLER: com.mcmedisoft.security.oauthbearer.OauthAuthenticateValidatorCallbackHandler

  keycloak-dev:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: [
      "start-dev",
      "--import-realm --health-enabled=true --metrics-enabled=true"
    ]
    volumes:
      - ./kafka-authbearer.json:/opt/keycloak/data/import/realm.json
    ports:
      - 8080:8080

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
      AUTH_TYPE: OAUTH2
      AUTH_OAUTH2_CLIENT_KEYCLOAK_CLIENTID: ${KAFKA_UI_CLIENT_ID}
      AUTH_OAUTH2_CLIENT_KEYCLOAK_CLIENTSECRET: ${KAFKA_UI_CLIENT_SECRET}
      AUTH_OAUTH2_CLIENT_KEYCLOAK_SCOPE: ${KAFKA_UI_CLIENT_SCOPE}
      AUTH_OAUTH2_CLIENT_KEYCLOAK_ISSUER_URI: ${OAUTH_PROTOCOL}://${OAUTH_SERVER}/realms/avataa
      AUTH_OAUTH2_CLIENT_KEYCLOAK_CLIENT_NAME: KEYCLOAK
      AUTH_OAUTH2_CLIENT_KEYCLOAK_PROVIDER: KEYCLOAK
      AUTH_OAUTH2_CLIENT_KEYCLOAK_CUSTOM_PARAMS_TYPE: KEYCLOAK
    # kafka SASL OAUTHBEARER
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: OAUTHBEARER
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL: ${OAUTH_PROTOCOL}://${OAUTH_SERVER}/realms/avataa/protocol/openid-connect/token
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId="${KAFKA_CLIENT_ID}" clientSecret="${KAFKA_CLIENT_SECRET}" scope=${OAUTH_LOGIN_SCOPE};
     
